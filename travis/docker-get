#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Copyright (c) 2017, Camptocamp SA
# All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:

# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.

# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# The views and conclusions contained in the software and documentation are those
# of the authors and should not be interpreted as representing official policies,
# either expressed or implied, of the FreeBSD Project.

import os
import argparse
import subprocess


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--tag", required=True)
    parser.add_argument("--folder", required=True)
    parser.add_argument("--rules", nargs="+")
    parser.add_argument("--paths", nargs="+", required=True)
    args = parser.parse_args()

    subprocess.check_output(["git", "fetch", "origin", "master:master"])
    files = []
    for path in args.paths:
        diff = subprocess.check_output(["git", "diff", "--name-only", "master", "--", path]).decode("utf-8").strip()
        files += [] if diff == "" else [
            l.strip()
            for l in diff.split("\n")
        ]
    if len(files) == 0 and os.environ.get("TRAVIS_BRANCH") != "master":
        subprocess.check_call(["docker", "pull", args.tag])
    else:
        if args.rules is not None:
            subprocess.check_call(["./docker-run", "make"] + args.rules)
        subprocess.check_call([
            "docker", "build", "--tag", args.tag, args.folder
        ])

if __name__ == "__main__":
        main()
