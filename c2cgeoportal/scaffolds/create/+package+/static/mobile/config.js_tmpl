/*
 * This file represents the customization point for the application integrator.
 *
 * After execution of this script an OpenLayers map filled with layers should
 * be available in App.map.
 *
 * This file also contains translations for the application strings.
 */

OpenLayers.Util.extend(OpenLayers.Lang.en, {
    // base layer switcher picker (you shouldn't remove this)
    'layer_switcher.cancel': 'Cancel',
    'layer_switcher.done': 'Done',

    // themes
    'theme_switcher.prefix': 'Theme: ',

    // login/logout
    'loginButtonText': 'Log in',
    'welcomeText': '<p>You are {username}.</p>',
    'logoutButtonText': 'Log out',
    'loginLabel': 'Login',
    'passwordLabel': 'Password',
    'loginSubmitButtonText': 'Submit',
    'loginCancelButtonText': 'Cancel',

    // redirect to standard application
    'redirect_msg': "You're using the mobile version. Check out the" +
        " <a href='${'${url}'}'>standard version</a>.",
    'close': "Close"
});
OpenLayers.Util.extend(OpenLayers.Lang.fr, {
    // base layer switcher picker (you shouldn't remove this)
    'layer_switcher.cancel': 'Annuler',
    'layer_switcher.done': 'OK',

    // themes
    'theme_switcher.prefix': 'Thème : ',

    // login/logout
    'loginButtonText': 'Me connecter',
    'welcomeText': '<p>Vous êtes {username}.</p>',
    'logoutButtonText': 'Me déconnecter',
    'loginLabel': 'Nom',
    'passwordLabel': 'Mot de passe',
    'loginSubmitButtonText': 'Me connecter',
    'loginCancelButtonText': 'Annuler',

    // redirect to standard application
    'redirect_msg': "Vous utilisez la version pour mobile. Vous pouvez aussi" +
        " consulter la <a href='${'${url}'}'>version standard</a>.",
    'close': "Fermer"
});
OpenLayers.Util.extend(OpenLayers.Lang.de, {
    // base layer switcher picker (you shouldn't remove this)
    'layer_switcher.cancel': 'Abbrechen',
    'layer_switcher.done': 'OK',

    // themes
    'theme_switcher.prefix': 'Thema : ',

    // login/logout
    'loginButtonText': 'Log in',
    'welcomeText': '<p>Sie sind {username}.</p>',
    'logoutButtonText': 'Log out',
    'loginLabel': 'Login',
    'passwordLabel': 'Passwort',
    'loginSubmitButtonText': 'OK',
    'loginCancelButtonText': 'Abbrechen',

    // redirect to standard application
    'redirect_msg': "Sie benutzen die mobile Version. Sie können auch" +
        " die <a href='${'${url}'}'>Standardversion</a> benutzen.",
    'close': "Schliessen"
});
OpenLayers.Lang.setCode("${lang}");

// App.info includes information that is needed by internal
// components, such as the Login view component.
App.info = '${info | n}';

App.themes = '${themes | n}';

App.WFSTypes = '${wfs_types | n}';

var dummy = "<% from json import dumps %>";
jsonFormat = new OpenLayers.Format.JSON();
try {
    App.tilesURL = jsonFormat.read('${dumps(request.registry.settings["tiles_url"]) | n}');
}
catch (e) {
    // For the Sencha build ...
    App.tilesURL = "";
}
var RESTRICTED_EXTENT = [420000, 30000, 900000, 350000];
var WMTS_OPTIONS = {
    url: App.tilesURL,
    displayInLayerSwitcher: false,
    requestEncoding: 'REST',
    buffer: 0,
    transitionEffect: "resize",
    visibility: false,
    style: 'default',
    dimensions: ['TIME'],
    params: {
        'time': '2014'
    },
    matrixSet: 'swissgrid',
    maxExtent: new OpenLayers.Bounds(420000, 30000, 900000, 350000),
    projection: new OpenLayers.Projection("EPSG:{{srid}}"),
    units: "m",
    formatSuffix: 'png',
    serverResolutions: [1000,500,250,100,50,20,10,5,2.5,2,1.5,1,0.5,0.25,0.1,0.05]
};

// define the map and layers
App.map = new OpenLayers.Map({
    fallThrough: true, // required for longpress queries
    theme: null,
    projection: 'EPSG:{{srid}}',
    resolutions: [1000,500,250,100,50,20,10,5,2.5,1,0.5,0.25,0.1,0.05],
    maxExtent: RESTRICTED_EXTENT,
    restrictedExtent: RESTRICTED_EXTENT,

    controls: [
        new OpenLayers.Control.TouchNavigation({
            dragPanOptions: {
                interval: 1,
                enableKinetic: true
            }
        }),
        new OpenLayers.Control.Attribution(),
        new OpenLayers.Control.ScaleLine({geodesic: true})
    ],
    layers: [
        new OpenLayers.Layer.WMTS(OpenLayers.Util.applyDefaults({
            name: OpenLayers.i18n('plan'),
            layer: 'plan'
        }, WMTS_OPTIONS),
        new OpenLayers.Layer.WMTS(OpenLayers.Util.applyDefaults({
            name: OpenLayers.i18n('ortho'),
            layer: 'ortho',
            formatSuffix: 'jpeg'
        }, WMTS_OPTIONS),
        new OpenLayers.Layer(
            OpenLayers.i18n('blank')
        )
    ]
});
